#version 430

#define GROUP_SIZE 256

layout(local_size_x = GROUP_SIZE) in;

layout(push_constant) uniform params 
{
    uint len;
}   PushConstant;
layout(std430, binding = 0) buffer a 
{
    float arr[];
};
layout(std430, binding = 1) buffer Sum
{
    float sum[];
};
layout(std430, binding = 2) buffer FinalSum
{
    float finalSum[];
};

shared float cache[GROUP_SIZE];

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    uint groupID = gl_WorkGroupID.x;
    uint localID = gl_LocalInvocationID.x;

    uint groupToWork = groupID * GROUP_SIZE;
    uint blockLength = (groupID + 1) * GROUP_SIZE > PushConstant.len ? PushConstant.len - groupToWork : GROUP_SIZE;

    cache[localID] = localID < blockLength ? arr[idx] : 0;

    for (uint offset = 1; offset <= GROUP_SIZE >> 1; offset <<= 1)
    {
        barrier();
        if ((localID + 1) % (offset << 1) == 0)
            cache[localID] += cache[localID - offset];
    }
    barrier();
    if (localID == GROUP_SIZE - 1)
    {
        sum[groupID] = cache[localID];
        cache[localID] = 0;
    }
    for (uint offset = GROUP_SIZE >> 1; offset >= 1; offset >>= 1) 
    {
        barrier();
        if ((localID + 1) % (offset << 1) == 0)
        {
            float temp = cache[localID];
            cache[localID] += cache[localID - offset];
            cache[localID - offset] = temp;
        }
    }
    barrier();
    if (localID < blockLength)
        finalSum[idx] = cache[localID];
}