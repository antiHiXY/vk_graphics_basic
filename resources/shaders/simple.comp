#version 430

#define GROUP_SIZE 256

layout(local_size_x = GROUP_SIZE) in;

layout(push_constant) uniform params 
{
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Sum
{
    float sum[];
};

shared float cache[GROUP_SIZE * 2];

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    int offset = 1;
    cache[2 * idx] = A[2 * idx];
    cache[2 * idx + 1] = A[2 * idx + 1];
    barrier();

    for (uint d = GROUP_SIZE >> 1; d > 0; d >>= 1)
    {
        barrier();
        if (idx < d)
        {
            uint a = offset * (2 * idx + 1) - 1;
            uint b = offset * (2 * idx + 2) - 1;

            cache[b] += cache[a];
        }
        offset *= 2;
    }
    if (idx == 0)
    {
        cache[GROUP_SIZE - 1] = 0;
    }
    for (uint d = 1; d < GROUP_SIZE; d *= 2)
    {
        offset >>= 1;
        barrier();
        if (idx < d)
        {
            uint a = offset * (2 * idx + 1) - 1;
            uint b = offset * (2 * idx + 2) - 1;
            float tmp = cache[a];
            cache[a] = cache[b];
            cache[b] += tmp;
        }
    }
    barrier();
    sum[2 * idx] = cache[2 * idx];
    sum[2 * idx + 1] = cache[2 * idx + 1];
}